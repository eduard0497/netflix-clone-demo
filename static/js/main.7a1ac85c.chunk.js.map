{"version":3,"sources":["links.js","Banner.js","CategoryRow.js","App.js","reportWebVitals.js","index.js"],"names":["links","trending","popular","topRated","upcoming","Banner","useState","movie","setMovie","useEffect","a","fetch","res","json","data","results","Math","floor","random","length","fetchMovie","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","movieTrailer","require","CategoryRow","link","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchMovies","map","onClick","original_title","then","url","urlParams","URLSearchParams","URL","search","get","handleClick","src","poster_path","alt","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAaeA,G,MAXD,CACZC,SACE,yFACFC,QACE,4GACFC,SACE,8GACFC,SACE,+G,qDCqCWC,MAzCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAZAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACkBC,MAAMX,EAAMC,UAD9B,cACMW,EADN,gBAEmBA,EAAIC,OAFvB,OAEMC,EAFN,OAGEN,EACEM,EAAKC,QAAQC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKC,QAAQI,OAAS,KAJlE,4CADc,uBAAC,WAAD,wBASdC,KACC,IAGD,yBACEC,UAAU,SACVC,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,OAAD,OAtBP,wCAsBO,cAAmBjB,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAOkB,cAA1B,KACfC,mBAAoB,iBALxB,UAQE,sBAAKL,UAAU,mBAAf,UACE,oBAAIA,UAAU,gBAAd,UACQ,OAALd,QAAK,IAALA,OAAA,EAAAA,EAAOoB,SAAP,OAAgBpB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOqB,QAAvB,OAA+BrB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOsB,iBAGzC,sBAAKR,UAAU,kBAAf,UACE,wBAAQA,UAAU,iBAAlB,kBACA,wBAAQA,UAAU,iBAAlB,wBAGF,oBAAIA,UAAU,sBAAd,gBAAqCd,QAArC,IAAqCA,OAArC,EAAqCA,EAAOuB,cAE9C,qBAAKT,UAAU,qB,eCtCfU,EAAeC,EAAQ,IA2DdC,MAvDf,YAAmD,IAA5BN,EAA2B,EAA3BA,MAAOO,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAClC,EAA4B7B,mBAAS,IAArC,mBAAO8B,EAAP,KAAeC,EAAf,KACA,EAAoC/B,mBAAS,IAA7C,mBAAOgC,EAAP,KAAmBC,EAAnB,KAgCA,OA9BA9B,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACkBC,MAAMuB,GADxB,cACMtB,EADN,gBAEmBA,EAAIC,OAFvB,OAEMC,EAFN,OAGEuB,EAAUvB,EAAKC,SAHjB,4CADc,uBAAC,WAAD,wBAOdyB,KACC,CAACN,IAuBF,sBAAKb,UAAU,iBAAf,UACE,6BAAKM,IACL,qBAAKN,UAAU,aAAf,SACGe,EAAOK,KAAI,SAAClC,GAAD,OACV,qBACEmC,QAAS,kBAjBC,SAACnC,GACf+B,EACFC,EAAc,IAEdR,GAAkB,OAALxB,QAAK,IAALA,OAAA,EAAAA,EAAOoC,iBAAkB,IAAIC,MAAK,SAACC,GAC9C,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDV,EAAcO,EAAUI,IAAI,SAWTC,CAAY5C,IAE3Bc,UAAS,oBAAec,GAAc,kBACtCiB,IAAG,UA7CC,wCA6CD,OACDjB,EAAa5B,EAAM8C,YAAc9C,EAAMkB,eAEzC6B,IAAK/C,EAAMqB,MALNrB,EAAMgD,SAShBjB,GAAc,cAAC,IAAD,CAASkB,QAASlB,EAAYmB,KApCpC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,UCTDC,MAZf,WACE,OACE,sBAAKzC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaa,KAAMlC,EAAMC,SAAU0B,MAAM,WAAWQ,YAAU,IAC9D,cAAC,EAAD,CAAaD,KAAMlC,EAAME,QAASyB,MAAM,YACxC,cAAC,EAAD,CAAaO,KAAMlC,EAAMG,SAAUwB,MAAM,cACzC,cAAC,EAAD,CAAaO,KAAMlC,EAAMI,SAAUuB,MAAM,iBCDhCoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7a1ac85c.chunk.js","sourcesContent":["// b11aebb33a188d2fd49946a2464d5cb4\r\n\r\nconst links = {\r\n  trending:\r\n    \"https://api.themoviedb.org/3/trending/all/day?api_key=b11aebb33a188d2fd49946a2464d5cb4\",\r\n  popular:\r\n    \"https://api.themoviedb.org/3/movie/popular?api_key=b11aebb33a188d2fd49946a2464d5cb4&language=en-US&page=1\",\r\n  topRated:\r\n    \"https://api.themoviedb.org/3/movie/top_rated?api_key=b11aebb33a188d2fd49946a2464d5cb4&language=en-US&page=1\",\r\n  upcoming:\r\n    \"https://api.themoviedb.org/3/movie/upcoming?api_key=b11aebb33a188d2fd49946a2464d5cb4&language=en-US&page=1\",\r\n};\r\n\r\nexport default links;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Banner.css\";\r\nimport links from \"./links\";\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchMovie() {\r\n      let res = await fetch(links.trending);\r\n      let data = await res.json();\r\n      setMovie(\r\n        data.results[Math.floor(Math.random() * data.results.length - 1)]\r\n      );\r\n    }\r\n\r\n    fetchMovie();\r\n  }, []);\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(${baseUrl}${movie?.backdrop_path})`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"banner__description\">{movie?.overview}</h1>\r\n      </div>\r\n      <div className=\"fading__area\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CategoryRowCSS.css\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst movieTrailer = require(\"movie-trailer\");\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction CategoryRow({ title, link, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      let res = await fetch(link);\r\n      let data = await res.json();\r\n      setMovies(data.results);\r\n    }\r\n\r\n    fetchMovies();\r\n  }, [link]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.original_title || \"\").then((url) => {\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        setTrailerUrl(urlParams.get(\"v\"));\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row__container\">\r\n      <h1>{title}</h1>\r\n      <div className=\"row__cards\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            onClick={() => handleClick(movie)}\r\n            key={movie.id}\r\n            className={`row__card ${isLargeRow && \"row__cardLarge\"}`}\r\n            src={`${baseUrl}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryRow;\r\n","import React from \"react\";\nimport links from \"./links\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nimport CategoryRow from \"./CategoryRow\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Banner />\n      <CategoryRow link={links.trending} title=\"Trending\" isLargeRow />\n      <CategoryRow link={links.popular} title=\"Popular\" />\n      <CategoryRow link={links.topRated} title=\"Top Rated\" />\n      <CategoryRow link={links.upcoming} title=\"Upcoming\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}